{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","username","id","className","alt","src","CardList","robots","CardLoop","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","ErrorBoundry","state","hasError","this","setState","React","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobot","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GAC5B,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACjB,gCACI,6BAAKF,IACL,4BAAIC,WCOTK,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAWD,EAAOE,KAAI,SAACC,EAAKC,GAC9B,OAAO,cAAC,EAAD,CAAyBT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,SAAUM,EAAOI,GAAGV,UAA1EM,EAAOI,GAAGT,OAEhC,OACA,8BACKM,KCKMI,EAbG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACA,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARD,SAACC,GACX,OACE,qBAAKC,MAAS,CAAEC,UAAU,SAAUC,OAAO,SAA3C,SACCH,EAAMI,YCiBEC,E,kDAnBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAW,GAHA,E,gEAQfC,KAAKC,SAAS,CAAEF,UAAW,M,+BAI/B,OAAIC,KAAKF,MAAMC,SACJ,4DAEJC,KAAKR,MAAMI,a,GAhBKM,IAAMC,WC2ClBC,G,wDArCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEM,YAAaD,EAAME,OAAOC,SAb1C,EAAKX,MAAQ,CACTjB,OAAQ,GACR0B,YAAc,IAJT,E,gEAQQ,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAACpB,OAAQiC,S,+BAOhC,IAAD,EAC2Bd,KAAKF,MAA7BjB,EADH,EACGA,OAAQ0B,EADX,EACWA,YACVQ,EAAgBlC,EAAOmC,QAAO,SAAAC,GAChC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASZ,EAAYW,kBAEzD,OACI,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAca,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAQkC,e,GA9BxBb,IAAMC,YCKTiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.f8f0e2e3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, username, id }) => {\r\n    return(\r\n        <div className=\"tc dib bg-light-green br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{username}</p>\r\n                </div>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    const CardLoop = robots.map((user,i) => {\r\n        return <Card key={robots[i].id} id={robots[i].id} name={robots[i].name} username={robots[i].username} />\r\n    });\r\n    return(\r\n    <div>\r\n        {CardLoop}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    return(\r\n    <div className=\"pa2\">\r\n        <input \r\n        className=\"pa3 ba b--green bg-lightest-blue\" \r\n        type=\"search\" \r\n        placeholder=\"Search Robots\"\r\n        onChange={searchChange}\r\n        /> \r\n    </div> \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll =(props) =>{\r\n    return(\r\n      <div style = {{ overflowY:'scroll', height:'800px' }}>\r\n      {props.children}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch () {\r\n        this.setState({ hasError : true})\r\n    }\r\n\r\nrender () {\r\n    if (this.state.hasError) {\r\n        return <h1>oops. something went wrong</h1> \r\n        }\r\n    return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n\r\n","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield : ''            \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>response.json())\r\n        .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobot = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        });\r\n        return(\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobot} />\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n                );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}